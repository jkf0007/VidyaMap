package vidyamap.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class TestSearchRequest {

	private static String searchUrl = "http://localhost:8080/VidyaMap/search";

	public static void main(String[] args) {
		

		// TODO Auto-generated method stub
        ArrayList<String> list = new ArrayList<String>();
        StringBuilder myBuilder = new StringBuilder();
        String original = "aba";
        char [] c = original.toCharArray();
        Arrays.sort(c);


        for(int i=0; i<original.length(); i++)
            genSubs(c, myBuilder, list, i);

        System.out.println(list.toString());
		    }
	
	static void genSubs(char [] original, StringBuilder current, ArrayList<String> myList, int index){

	    current.append(original[index]);

	    //System.out.println(current.toString() + index);

	    myList.add(current.toString());


	    for(int i=index+1; i<original.length; i++)
	        genSubs(original, current, myList, i);

	    current.deleteCharAt(current.toString().length()-1);


	    return;
	}

		    private static void generateUniqueSubsets(char[] word, int start, String prefix) {
		        //System.out.println("start " + start + " prefix " + prefix);
		        if (start >= word.length) {
		            System.out.println(prefix);
		            return;
		        }

		        char ch = word[start];
		        int count = 1;
		        for (int i=start+1; i<word.length; i++) {
		            if (word[i] == ch) {
		                count++;
		            } else {
		                break;
		            }
		        }

		        String next = "";
		        for (int i=0; i<=count; i++) {
		            generateUniqueSubsets(word, start+count, prefix+next);
		            next = next + ch;
		        }


		/*try {

			URL url = new URL(searchUrl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setDoOutput(true);
			conn.setRequestMethod("POST");
			conn.setRequestProperty("Content-Type", "application/json");

			//String input = Util.loadFileAsString("tmp/input.json");
			String input = "plants temperature";
			log(input);
			
			OutputStreamWriter os = new OutputStreamWriter(conn.getOutputStream());
			os.write(input);
			os.flush();

			if (conn.getResponseCode() != HttpURLConnection.HTTP_OK) {
				throw new RuntimeException("Failed : HTTP error code : "
						+ conn.getResponseCode() + " " + conn.getResponseMessage());
			}

			BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));

			String output;
			log("Output from Server .... \n");
			while ((output = br.readLine()) != null) {
				log(output);
			}
			conn.disconnect();

		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}*/

	}
		    
		    public List<List<Integer>> subsetsWithDup(int[] num) {
		        Arrays.sort(num);
		        return subset(num, 0, new ArrayList<List<Integer>>());

		    }

		    public List<List<Integer>> subset(int[] num, int index, List<List<Integer>> newNext) {
		        List<List<Integer>> result = new ArrayList<List<Integer>>();

		        if (index >= num.length) {
		            List<Integer> list = new ArrayList<Integer>();
		            result.add(list);
		            return result;
		        }

		        List<List<Integer>> nextList = subset(num, index + 1, newNext);
		        List<List<Integer>> iterate = null;

		        iterate = (index + 1 < num.length && num[index] == num[index+1]) ? newNext : nextList;
		        for (List<Integer> l : iterate) {
		            List<Integer> newList = new ArrayList<Integer>(l);
		            newList.add(0, num[index]);
		            result.add(newList);
		        }

		        newNext.clear();
		        for (List<Integer> l : result) {
		            newNext.add(l);
		        }

		        result.addAll(nextList);
		        return result;
		    }

	static void log(Object o) {
		System.out.println(o.toString());
	}
}
